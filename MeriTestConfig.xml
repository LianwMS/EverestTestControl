<Configuration>
  <!--The name of your test-->
  <Name>Everest</Name>
  <Owners>Fareast\wenjiefu</Owners>
  <!--The Token for authorization. The Auth has been disabled in the Codebox Meri deployment, so just put it as empty-->
  <Token>d2VuamllZnUlNDBtaWNyb3NvZnQuY29tXDU2YjBhOTgwLWZjMTMtNGU4ZC05Yzg1LTM5OTM3MmU3MGYzMw==</Token>
  <!-- Grant additional initial permission here if needed. -->
  <Permissions>
    <Permission identity="lianw@microsoft.com" canRead="true" canModify="true" canExecute="true" canManagePermission="true" />
    <Permission identity="t-jianzh@microsoft.com" canRead="true" canModify="true" canExecute="true" canManagePermission="true" />
  </Permissions>
  <!--Set to true to tell Meri Client Tool to start the test in local machine so that you can troubleshoot or debug easily-->
  <LocalRun>false</LocalRun>
  <!--How long do you want your test to run-->
  <TimeoutInSecond>7200</TimeoutInSecond>
  <FileLogger path='.\Log\testlog.txt.html'/>
  <Meri>
    <!--Keep this empty to start a new test, otherwise put the taskId here to tell meri client tool to attach to the task-->
    <TaskId></TaskId>
    <FileSetInfos>
      <!--The test assemblies that's needed to run your test-->
      <FileSetInfo name="EverestMsi" id="b6f2989c-6174-43cd-a476-3740cd072879" localFolder="C:\MeriFiles\bits" />
      <FileSetInfo name="EverestTestAssemblies" id="" localFolder="C:\MeriFiles\amd64" />
      <FileSetInfo name="EverestTestPipelineReworkFiles" id="5bec6047-a13a-46bb-9b32-2fa97ef8306f" localFolder="D:\MeriFiles\PipelineReworkFiles" />
      <FileSetInfo name='EverestTestConfig' id ="" localFolder='C:\MeriFiles\config'/>
    </FileSetInfos>
    <Parameters>
      <Parameter key='ContainerImageTag' value='' />
      <Parameter key='ContainerLocation' value='eastus' />
      <Parameter key='DBScript' value='' />
      <Parameter key='DBImageVersion' value='' />
      <!--The test type: 0=Normal, 1=Aginst Prod DB, 2=Aginst Prod Worker-->
      <Parameter key='TestType' value='0' />
      <Parameter key='Account' value='everest'/>
      <Parameter key='Password' value='User@123User@123'/>
    </Parameters>
    <!--Where do you want to run your test, it's only useful when you have multiple SU so you may want to start load from different data center-->
    <Region>MeriWus2</Region>
    <Tags>SampleLoad</Tags>
    <WorkItemDefinitions>
      <!--name: the name of your test in Meri
          tag: you can use tag to group related test so that you can start all the test with some specific tag if needed
          manualStart: whether you want the test to be started immediately or you want to start it manually later  -->
      <!--
      <MSTest name='ScaleOut_FolderAndSecurityTest' tag='EverstSampleTest' manualStart='false'>
        <TestMethod testAssembly='Microsoft.SqlServer.IntegrationServices.MSTest' testClass='Microsoft.SqlServer.IntegrationServices.MSTest.EverestTestCases'>ScaleOut_FolderAndSecurityTest</TestMethod>
        <DelayStartInSecond>0</DelayStartInSecond>
        <InstanceCount>1</InstanceCount>
        <Parameters>
          <Parameter key='SQLServerNormal' value='everestest-1.database.windows.net'/>
          <Parameter key='SQLServerBCTWithProdDB' value='everestest-13.database.windows.net'/>
          <Parameter key='SQLServerBCTWithProdWorker' value='everestest-25.database.windows.net'/>
        </Parameters>
        <Region>MeriWus2</Region>
        <WorkItemType>Recursive</WorkItemType>
        <TypeArg>1</TypeArg>
        <Weight>900</Weight>
      </MSTest>

      <MSTest name='ScaleOut_ProjectAndEnvironmentTest' tag='EverstSampleTest' manualStart='false'>
        <TestMethod testAssembly='Microsoft.SqlServer.IntegrationServices.MSTest' testClass='Microsoft.SqlServer.IntegrationServices.MSTest.EverestTestCases'>ScaleOut_ProjectAndEnvironmentTest</TestMethod>
        <DelayStartInSecond>0</DelayStartInSecond>
        <InstanceCount>1</InstanceCount>
        <Parameters>
          <Parameter key='SQLServerNormal' value='everestest-2.database.windows.net'/>
          <Parameter key='SQLServerBCTWithProdDB' value='everestest-14.database.windows.net'/>
          <Parameter key='SQLServerBCTWithProdWorker' value='everestest-26.database.windows.net'/>
        </Parameters>
        <Region>MeriWus2</Region>
        <WorkItemType>Recursive</WorkItemType>
        <TypeArg>1</TypeArg>
        <Weight>900</Weight>
      </MSTest>

      <MSTest name='ScaleOut_ServerLoggingTest' tag='EverstSampleTest' manualStart='false'>
        <TestMethod testAssembly='Microsoft.SqlServer.IntegrationServices.MSTest' testClass='Microsoft.SqlServer.IntegrationServices.MSTest.EverestTestCases'>ScaleOut_ServerLoggingTest</TestMethod>
        <DelayStartInSecond>0</DelayStartInSecond>
        <InstanceCount>1</InstanceCount>
        <Parameters>
          <Parameter key='SQLServerNormal' value='everestest-3.database.windows.net'/>
          <Parameter key='SQLServerBCTWithProdDB' value='everestest-15.database.windows.net'/>
          <Parameter key='SQLServerBCTWithProdWorker' value='everestest-27.database.windows.net'/>
        </Parameters>
        <Region>MeriWus2</Region>
        <WorkItemType>Recursive</WorkItemType>
        <TypeArg>1</TypeArg>
        <Weight>900</Weight>
      </MSTest>
      
      <MSTest name='ScaleOut_UnicodeFlatFileAdapters' tag='EverstSampleTest' manualStart='false'>
        <TestMethod testAssembly='Microsoft.SqlServer.IntegrationServices.MSTest' testClass='Microsoft.SqlServer.IntegrationServices.MSTest.EverestTestCases'>ScaleOut_UnicodeFlatFileAdapters</TestMethod>
        <DelayStartInSecond>0</DelayStartInSecond>
        <InstanceCount>1</InstanceCount>
        <Parameters>
          <Parameter key='SQLServerNormal' value='everestest-4.database.windows.net'/>
          <Parameter key='SQLServerBCTWithProdDB' value='everestest-16.database.windows.net'/>
          <Parameter key='SQLServerBCTWithProdWorker' value='everestest-28.database.windows.net'/>
        </Parameters>
        <Region>MeriWus2</Region>
        <WorkItemType>Recursive</WorkItemType>
        <TypeArg>1</TypeArg>
        <Weight>900</Weight>
      </MSTest>

    <MSTest name='ScaleOut_OLEDBTest' tag='EverstSampleTest' manualStart='false'>
        <TestMethod testAssembly='Microsoft.SqlServer.IntegrationServices.MSTest' testClass='Microsoft.SqlServer.IntegrationServices.MSTest.EverestTestCases'>ScaleOut_OLEDBTest</TestMethod>
        <DelayStartInSecond>0</DelayStartInSecond>
        <InstanceCount>1</InstanceCount>
        <Parameters>
          <Parameter key='SQLServerNormal' value='everestest-5.database.windows.net'/>
          <Parameter key='SQLServerBCTWithProdDB' value='everestest-17.database.windows.net'/>
          <Parameter key='SQLServerBCTWithProdWorker' value='everestest-29.database.windows.net'/>
        </Parameters>
        <Region>MeriWus2</Region>
        <WorkItemType>Recursive</WorkItemType>
        <TypeArg>1</TypeArg>
        <Weight>900</Weight>
      </MSTest>

      <MSTest name='ScaleOut_RawAdapter' tag='EverstSampleTest' manualStart='false'>
        <TestMethod testAssembly='Microsoft.SqlServer.IntegrationServices.MSTest' testClass='Microsoft.SqlServer.IntegrationServices.MSTest.EverestTestCases'>ScaleOut_RawAdapter</TestMethod>
        <DelayStartInSecond>0</DelayStartInSecond>
        <InstanceCount>1</InstanceCount>
        <Parameters>
          <Parameter key='SQLServerNormal' value='everestest-6.database.windows.net'/>
          <Parameter key='SQLServerBCTWithProdDB' value='everestest-18.database.windows.net'/>
          <Parameter key='SQLServerBCTWithProdWorker' value='everestest-30.database.windows.net'/>
        </Parameters>
        <Region>MeriWus2</Region>
        <WorkItemType>Recursive</WorkItemType>
        <TypeArg>1</TypeArg>
        <Weight>900</Weight>
      </MSTest>

      <MSTest name='ScaleOut_XMLSrc' tag='EverstSampleTest' manualStart='false'>
        <TestMethod testAssembly='Microsoft.SqlServer.IntegrationServices.MSTest' testClass='Microsoft.SqlServer.IntegrationServices.MSTest.EverestTestCases'>ScaleOut_XMLSrc</TestMethod>
        <DelayStartInSecond>0</DelayStartInSecond>
        <InstanceCount>1</InstanceCount>
        <Parameters>
          <Parameter key='SQLServerNormal' value='everestest-7.database.windows.net'/>
          <Parameter key='SQLServerBCTWithProdDB' value='everestest-19.database.windows.net'/>
          <Parameter key='SQLServerBCTWithProdWorker' value='everestest-31.database.windows.net'/>
        </Parameters>
        <Region>MeriWus2</Region>
        <WorkItemType>Recursive</WorkItemType>
        <TypeArg>1</TypeArg>
        <Weight>900</Weight>
      </MSTest>
      -->
      <MSTest name='ScaleOut_SQLTask' tag='EverstSampleTest' manualStart='false'>
        <TestMethod testAssembly='Microsoft.SqlServer.IntegrationServices.MSTest' testClass='Microsoft.SqlServer.IntegrationServices.MSTest.EverestTestCases'>ScaleOut_SQLTask</TestMethod>
        <DelayStartInSecond>0</DelayStartInSecond>
        <InstanceCount>1</InstanceCount>
        <Parameters>
          <Parameter key='SQLServerNormal' value='everestest-8.database.windows.net'/>
          <Parameter key='SQLServerBCTWithProdDB' value='everestest-20.database.windows.net'/>
          <Parameter key='SQLServerBCTWithProdWorker' value='everestest-32.database.windows.net'/>
        </Parameters>
        <Region>MeriWus2</Region>
        <WorkItemType>Recursive</WorkItemType>
        <TypeArg>1</TypeArg>
        <Weight>900</Weight>
      </MSTest>

      <MSTest name='ScaleOut_PipelineRework' tag='EverstSampleTest' manualStart='false'>
        <TestMethod testAssembly='Microsoft.SqlServer.IntegrationServices.MSTest' testClass='Microsoft.SqlServer.IntegrationServices.MSTest.EverestTestCases'>ScaleOut_PipelineRework</TestMethod>
        <DelayStartInSecond>0</DelayStartInSecond>
        <InstanceCount>1</InstanceCount>
        <Parameters>
          <Parameter key='SQLServerNormal' value='everestest-9.database.windows.net'/>
          <Parameter key='SQLServerBCTWithProdDB' value='everestest-21.database.windows.net'/>
          <Parameter key='SQLServerBCTWithProdWorker' value='everestest-33.database.windows.net'/>
        </Parameters>
        <Region>MeriWus2</Region>
        <WorkItemType>Recursive</WorkItemType>
        <TypeArg>1</TypeArg>
        <Weight>900</Weight>
      </MSTest>
 
      <MSTest name='ScaleOut_Script' tag='EverstSampleTest' manualStart='false'>
        <TestMethod testAssembly='Microsoft.SqlServer.IntegrationServices.MSTest' testClass='Microsoft.SqlServer.IntegrationServices.MSTest.EverestTestCases'>ScaleOut_Script</TestMethod>
        <DelayStartInSecond>0</DelayStartInSecond>
        <InstanceCount>1</InstanceCount>
        <Parameters>
          <Parameter key='SQLServerNormal' value='everestest-10.database.windows.net'/>
          <Parameter key='SQLServerBCTWithProdDB' value='everestest-22.database.windows.net'/>
          <Parameter key='SQLServerBCTWithProdWorker' value='everestest-34.database.windows.net'/>
        </Parameters>
        <Region>MeriWus2</Region>
        <WorkItemType>Recursive</WorkItemType>
        <TypeArg>1</TypeArg>
        <Weight>900</Weight>
      </MSTest>
      <!--
      <MSTest name='ScaleOut_Lookup' tag='EverstSampleTest' manualStart='false'>
        <TestMethod testAssembly='Microsoft.SqlServer.IntegrationServices.MSTest' testClass='Microsoft.SqlServer.IntegrationServices.MSTest.EverestTestCases'>ScaleOut_Lookup</TestMethod>
        <DelayStartInSecond>0</DelayStartInSecond>
        <InstanceCount>1</InstanceCount>
        <Parameters>
          <Parameter key='SQLServerNormal' value='everestest-11.database.windows.net'/>
          <Parameter key='SQLServerBCTWithProdDB' value='everestest-23.database.windows.net'/>
          <Parameter key='SQLServerBCTWithProdWorker' value='everestest-35.database.windows.net'/>
        </Parameters>
        <Region>MeriWus2</Region>
        <WorkItemType>Recursive</WorkItemType>
        <TypeArg>1</TypeArg>
        <Weight>900</Weight>
      </MSTest>

      <MSTest name='ScaleOut_OLEDBCommandDest' tag='EverstSampleTest' manualStart='false'>
        <TestMethod testAssembly='Microsoft.SqlServer.IntegrationServices.MSTest' testClass='Microsoft.SqlServer.IntegrationServices.MSTest.EverestTestCases'>ScaleOut_OLEDBCommandDest</TestMethod>
        <DelayStartInSecond>0</DelayStartInSecond>
        <InstanceCount>1</InstanceCount>
        <Parameters>
          <Parameter key='SQLServerNormal' value='everestest-12.database.windows.net'/>
          <Parameter key='SQLServerBCTWithProdDB' value='everestest-24.database.windows.net'/>
          <Parameter key='SQLServerBCTWithProdWorker' value='everestest-36.database.windows.net'/>
        </Parameters>
        <Region>MeriWus2</Region>
        <WorkItemType>Recursive</WorkItemType>
        <TypeArg>1</TypeArg>
        <Weight>900</Weight>
      </MSTest>
      -->
    </WorkItemDefinitions>
    <!--Define the customized perf counters, this part is optional-->
    <PerfCounters>
    </PerfCounters>

    <!--Following part of settings contains some advanced feature from Meri, Please refer to https://microsoft.sharepoint.com/teams/datamovement2/_layouts/OneNote.aspx?id=%2fteams%2fdatamovement2%2fShared%20Documents%2fTeam%2fServicePlatform%2fMeri%2fMeriOneNote&wd=target%28SampleConfig.one%7c60A4A1CA-3D7B-4C64-BDDC-6D85AA56B700%2f%29 for detail-->

    <!--You can add monitor on your service perf counter source (MDS) here so they will be shown in portal along with test side perf counter in real time-->
    <!--<AdditionalPerfCounterSource></AdditionalPerfCounterSource>-->

    <!--You can add monitor on your DB by defining the query so they will be shown in portal along with other perf counter in real time. -->
    <!--<DatabaseMonitor></DatabaseMonitor>-->

    <!--Additional data pulling task you want to include when running test in Meri, usually you can include real time service side error analysis here-->
    <!--<AdditionalPulling></AdditionalPulling>-->

    <!--Here you can define "View". a View can contains multiple charts containing defined perf counters, which makes the analysis and reporting much easier-->
    <!--You can find the View under 'Analysis' tab in the selected Task in Meri Portal-->


    <!--Here you can define Comparisons to compare current test run with other test runs easily-->

  </Meri>
</Configuration>
